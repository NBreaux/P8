So far included are the files P8.h and p8org.c

These are all the functions that need to be implemented into the source
TODO:      
        Parse() - this should be easy enough to implement !
		reduce ( void ) - pg 130
DONE:   
		nexts ( char *s, char *t) - pg 106-108 done by Danny checked by Miguel
		atold( char *a ) - pg 95  done by Danny checked by Miguel
		initscan( void )  - pg 102 
		illegalch( void ) - pg 101
		extradot ( int d, char *t) pg 98
		floatstr( char *t) - pg 99 done by Danny checked by Miguel
		delimiter ( void ) - pg 97
		baddigitstr( char *t) - pg 96
		intstr( char *t) - pg 103  done by Miguel, checked by Miguel
		gencode() these function should be provided in the download
		emit1( int i) by nick
		emit2( int i, int j) by nick
		emit3( int i, int j, int k)  by nick 
		emit0( int n ) by miguel
		comp ( int s, int *p) - pg 123 by miguel
		closeout ( void ) - pg 121/122 by miguel
		getsymbol(); by Nick, fixed by Miguel

Functions that have been implemented but need to be double checked		
CHECK:   Get to fucking work nick!
            
		letterstr( char *t) - pg 104 by Miguel
		hash ( char *s) - pg 100 by Miguel
		makename( char *p, char *q, char *r) - pg 105 by Miguel
		tento (int n) - pg 113 - by Miguel
		scan ( void ) - pg 112
		shift ( void ) pg 132
		match( void )  pg 127
		nextr( void )  pg 128 
		reportbug( void ) pg 131
		initparse ( void ) pg 126 - looks like the teacher is giving us this
		outscan ( void ) - pg 109-111
		
